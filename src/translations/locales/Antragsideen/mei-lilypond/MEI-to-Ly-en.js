    export default {
    
    (2523351,'<p>If LilyPond is able to convert XML to an internal representation (as per <ac:link><ri:page ri:content-title=\"1.1.2 Let LilyPond Compile XML Data\" /></ac:link>) it should also be able to produce working LilyPond input code and write it out to LilyPond files. This will give a complete MEI-to-LilyPond converter as a cheap by-product. Such LilyPond input files can be processed in more flexible ways than what will be possible with the approach taken by the <code>mei2ly</code> project (although this won\'t be necessary for the targeted Edirom use cases).</p><table><tbody><tr><td style=\"text-align: right;\"><strong>Type:</strong></td><td>File converter (optional module)</td></tr><tr><td style=\"text-align: right;\"><strong>Complexity:</strong></td><td>Trivial (probably)</td></tr><tr><td style=\"text-align: right;\"><strong>Technologies:</strong></td><td>Scheme</td></tr><tr><td style=\"text-align: right;\"><strong>Dependencies:</strong></td><td><ac:link><ri:page ri:content-title=\"1.1.2 Let LilyPond Compile XML Data\" /><ac:plain-text-link-body><![CDATA[1.1.2]]></ac:plain-text-link-body></ac:link></td></tr><tr><td style=\"text-align: right;\"><strong>State:</strong></td><td>--</td></tr></tbody></table><p style=\"text-align: right;\"><ac:link><ri:page ri:content-title=\"1.1.3 Convert MEI to a Suitable XML representation\" /><ac:plain-text-link-body><![CDATA[<= Back]]></ac:plain-text-link-body></ac:link> || <ac:link><ri:page ri:content-title=\"1.1 Data Structures/Formats\" /><ac:plain-text-link-body><![CDATA[Up]]></ac:plain-text-link-body></ac:link></p>',2490742,2),

    
    }