    export default {
   (2523318,'<p>In this work package a library for manipulating scores rendered as SVG files will be developed.</p><p>The scope of this library is deliberately very narrow: it will exclusively deal with the user interaction with a score in a browser context and not with any further processing. The purpose of this limitation is to develop a tool that can be reused as generically as possible.</p><table><tbody><tr><td style=\"text-align: right;\"><strong>Type:</strong></td><td><p><em>User interface<br /></em></p></td></tr><tr><td style=\"text-align: right;\"><strong>Complexity:</strong></td><td>Medium</td></tr><tr><td colspan=\"1\" style=\"text-align: right;\"><strong>Technologies:</strong></td><td colspan=\"1\">JavaScript, with or without external libraries such as jQuery</td></tr><tr><td style=\"text-align: right;\"><strong>Dependencies:</strong></td><td>None</td></tr><tr><td style=\"text-align: right;\"><strong>State:</strong></td><td>Preparatory proof-of-concept attempts have been made in the context of <a href=\"http://frescobaldi.org\">Frescobaldi</a> development</td></tr></tbody></table><p style=\"text-align: right;\"><ac:link><ri:page ri:content-title=\"2.2 Engrave Preview\" /><ac:plain-text-link-body><![CDATA[Up]]></ac:plain-text-link-body></ac:link> || <ac:link><ri:page ri:content-title=\"2.2.2 Rendering Hints\" /><ac:plain-text-link-body><![CDATA[Next =>]]></ac:plain-text-link-body></ac:link></p><hr /><p>The objective of this package is very clear: provide tools to select single or multiple items in an SVG score in a browser window and offer tools to graphically edit them, depending on their type: B&eacute;zier curves have to be edited differently than, say, hairpins or text elements.</p><p>The library should also provide the generic foundations for numerical editing tools. For example, when editing the control points of a slur, some UI elements on the page or in some kind of pop-up windows can provide tools to enter values numerically or with corresponding widgets like spinboxes etc. However, this should really be generic, more like an API, as the library should be usable by arbitrary notation systems. For example, the library might provide callbacks that UI elements in a web page can hook into, and routines to perform regularly required calculations.</p><p>The library should also provide a generic way of editing the <em>content</em> of the score. For example, when a note is selected its pitch or duration could be edited. Or items could be re-attached to different anchors, for example changing the end of a slur or the reference note of a dynamic. However, this also should be generic as not every use case will make use of this. For example, when fine-tuning a score for export in Edirom Online the user should <em>not</em> be able to modify the edition, only to tweak the layout. On the other hand, providing content editing tools will make it possible to use the module for working on an edition itself.</p><p>It has to be researched what existing work this can reuse or build upon. Surely similar functionality exists in the Verovio context and also other projects.</p>',2490706,2),
 
    
    
    }