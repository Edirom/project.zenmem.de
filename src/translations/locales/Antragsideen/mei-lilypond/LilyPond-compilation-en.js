    export default {
    
    (2523316,'<p>By design, LilyPond isn\'t capable of partially compiling a document. This is because a score document (at least of the LilyPond flavour) isn\'t organized linearly like a text document. However, (re-)compiling a score only&nbsp;partially is a means to significantly improve the user experience. For example it is useful to only recompile the current page or even the current system when only details (which do not affect the line breaking) have been updated.</p><p>An efficient approach to this issue is to extract the relevant parts of a document <em>before</em> passing them to LilyPond. The complexity of this lies in providing a sufficient level of &ldquo;context&rdquo; - like the current time and key signatures, or active spanners such as dynamics or slurs.</p><p>Another approach that should be explored is LilyPond\'s built-in support for partial compilation. It is possible to tell LilyPond to skip the typesetting for arbitrary sections of the score, and openLilyLib provides an easy interface to this. But this still requires the document to be <em>parsed</em> completely, which is already a substantial task with complex scores. However, if <ac:link><ri:page ri:content-title=\"1.2.2 Let LilyPond Keep a Document in Memory\" /></ac:link> should be successful this approach could be applied with significant benefit, at least for some use cases. While not applicable to the workflow of <em>editing</em> the document it may be applied in a tool where rendering hints for the edition-engraver are generated.</p><table><tbody><tr><td style=\"text-align: right;\"><strong>Type:</strong></td><td>Improvement (optional)</td></tr><tr><td style=\"text-align: right;\"><strong>Complexity:</strong></td><td>Medium to low</td></tr><tr><td style=\"text-align: right;\"><strong>Technologies:</strong></td><td><p>a) XSLT, (scripting language)<br />b) Scheme (, C++)</p></td></tr><tr><td style=\"text-align: right;\"><strong>Dependencies:</strong></td><td>a) None<br />b) <ac:link><ri:page ri:content-title=\"1.2.2 Let LilyPond Keep a Document in Memory\" /></ac:link></td></tr><tr><td style=\"text-align: right;\"><strong>State:</strong></td><td>--</td></tr></tbody></table><p style=\"text-align: right;\"><ac:link><ri:page ri:content-title=\"2.1.3 openLilyLib\" /><ac:plain-text-link-body><![CDATA[<= Back]]></ac:plain-text-link-body></ac:link> || <ac:link><ri:page ri:content-title=\"2.1 Requirements\" /><ac:plain-text-link-body><![CDATA[Up]]></ac:plain-text-link-body></ac:link> || <ac:link><ri:page ri:content-title=\"2.2 Engrave Preview\" /><ac:plain-text-link-body><![CDATA[Next =>]]></ac:plain-text-link-body></ac:link></p><p>&nbsp;</p>',2490702,2),

    
    }