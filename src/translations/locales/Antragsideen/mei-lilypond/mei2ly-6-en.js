    export default {
    
    (2523302,'<p>The XML format that can be used in <ac:link><ri:page ri:content-title=\"1.1.2 Let LilyPond Compile XML Data\" /></ac:link> is not defined yet. Probably it\'s best to require an XML representation that matches LilyPond\'s data organization as closely as possible (in order to use this capability for other XML formats as. Of course it would be great for LilyPond to be able to engrave from MusicXML as well.). However, it can\'t be expected that this XML format will be original and unrestricted MEI data, so there has to be a way to bring original MEI documents into a shape that can be used by LilyPond.</p><p>It has to be explored if this transformation should happen in the XML space (i.e. by having LilyPond invoke an XSLT processor) or already in LilyPond (i.e. Scheme processing the parsed SXML DOM). If it is done within Scheme this work package can also be merged with the previous.</p><table><tbody><tr><td style=\"text-align: right;\"><strong>Type:</strong></td><td>Requirement</td></tr><tr><td style=\"text-align: right;\"><strong>Complexity:</strong></td><td>Medium</td></tr><tr><td style=\"text-align: right;\"><strong>Technologies:</strong></td><td>Scheme and/or XSLT</td></tr><tr><td style=\"text-align: right;\"><strong>Dependencies:</strong></td><td><p><ac:link><ri:page ri:content-title=\"1.1.1 Update LilyPond to Guile v2\" /></ac:link></p><p>In order to make any use of this the previous work packages have to be completed. But discussion and design of this can be done earlier. If the conversion should be done with XSLT this can be developed at any time.</p></td></tr><tr><td colspan=\"1\" style=\"text-align: right;\"><strong>State:</strong></td><td colspan=\"1\">--</td></tr></tbody></table><p style=\"text-align: right;\"><ac:link><ri:page ri:content-title=\"1.1.2 Let LilyPond Compile XML Data\" /><ac:plain-text-link-body><![CDATA[<= Back]]></ac:plain-text-link-body></ac:link> || <ac:link><ri:page ri:content-title=\"1.1 Data Structures/Formats\" /><ac:plain-text-link-body><![CDATA[Up]]></ac:plain-text-link-body></ac:link> || <ac:link><ri:page ri:content-title=\"1.1.4 Let LilyPond Write .ly file\" /><ac:plain-text-link-body><![CDATA[Next =>]]></ac:plain-text-link-body></ac:link></p><hr /><p>If the intermediate format should happen to be Lychee-MEI (as per <ac:link><ri:page ri:content-title=\"1.1.2 Let LilyPond Compile XML Data\" /></ac:link>) this package might &quot;dissolve&quot; into simply <em>using</em> Lychee.</p>',2490678,2),

    
    }